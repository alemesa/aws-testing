# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
defaults: &defaults
  docker:
    - image: 'cimg/node:14.18'
  working_directory: ~/project

version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.0.0
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            sudo npm install -g npm@7
            npm install
      - run: node --version
      - run: npm --version
      - save_cache:
          paths:
            - node_modules
            - ~/.npm
            - ~/.cache
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: /root/project
          paths:
            - '*'

  linters:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /root/project
      - run:
          name: Run linters
          command: |
            npm run linters

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /root/project
      - run:
          name: 'Preparing Build'
          command: |
            npm run build:static
      - aws-cli/setup
      - run:
          name: 'Deploying to S3 and Invalidate Cloudfront'
          command: |
            aws s3 sync ./out s3://alemesa-static-site
            aws configure set preview.cloudfront true
            aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2
  deploy:
    jobs:
      - prepare
      - linters:
          requires:
            - prepare
      - build:
          requires:
            - prepare
          filters:
            branches:
              only:
                - main
